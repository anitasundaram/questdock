# Generated by Django 4.2.9 on 2024-11-17 19:32

from django.conf import settings
import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'categories',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('question_type', models.CharField(choices=[('yes_no', 'Yes/No'), ('scale', 'Scale (1-5)'), ('multiple', 'Multiple Choice')], max_length=20)),
                ('weight', models.FloatField(default=1.0)),
                ('order', models.IntegerField(default=0)),
                ('options', models.JSONField(blank=True, encoder=django.core.serializers.json.DjangoJSONEncoder, null=True)),
                ('show_conditions', models.JSONField(blank=True, encoder=django.core.serializers.json.DjangoJSONEncoder, help_text='\n        JSON format for conditions. Example:\n        {\n            "operator": "equals", # or "greater_than", "less_than", "in"\n            "value": "yes" # or number/array depending on question_type\n        }\n        ', null=True)),
                ('skip_logic', models.JSONField(blank=True, encoder=django.core.serializers.json.DjangoJSONEncoder, help_text='\n        JSON format for skip logic. Example:\n        {\n            "if_answer": "yes", \n            "skip_to_question_id": 5\n        }\n        ', null=True)),
                ('branch_logic', models.JSONField(blank=True, encoder=django.core.serializers.json.DjangoJSONEncoder, help_text='\n        JSON format for branch logic. Example:\n        {\n            "conditions": [\n                {\n                    "answer": "yes", \n                    "next_question_id": 3\n                },\n                {\n                    "answer": "no",\n                    "next_question_id": 7\n                }\n            ]\n        }\n        ', null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='assessment.category')),
                ('depends_on', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assessment.question')),
            ],
            options={
                'ordering': ['category', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('in_progress', 'In Progress'), ('completed', 'Completed')], default='in_progress', max_length=20)),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('categories', models.ManyToManyField(to='assessment.category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.JSONField(encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='assessment.assessment')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessment.question')),
            ],
            options={
                'ordering': ['question__category', 'question__order'],
                'unique_together': {('assessment', 'question')},
            },
        ),
    ]
